// Вариант 4

#include <iostream>
#include <ctime>
#include <cstdlib>
#include <iomanip> // Для форматированного вывода

#define N 5 // Определяем размер матрицы

using namespace std;

int main(){
    srand(time(NULL));
    int A[N][N]; //Объявляем матрицу
    bool flag; // Флаг, отвечающий, хотим ли мы ввести массив с клавиатуры или сгенерировать

    cout<<"Ввести массив с клавиатуры (0) или сгенерировать автоматически (1): ";
    cin>>flag;

    if(flag == 0){
        for (int i = 0; i<N; ++i){ // Идём по строкам
            for (int j = 0; j<N; ++j){ // Идём по столбцам
                cout << "A["<<i<<"]["<<j<<"]"<<" = ";
                cin >> A[i][j]; // Вводим соответствующий элемент
            }
            cout<<endl;
        }
        cout << "\nИсходный массив" << '\n';
        for (int i = 0; i<N; ++i){
            for (int j = 0; j<N; ++j){
                cout<< setw(3) << A [i][j]<<' '; // Выводим введённый массив с расстоянием между элементами в 3 у.е.
            }
            cout<<endl;
        }
    } else {
        cout<<"\nСгенерированный массив: \n";
        for (int i = 0; i<N; ++i){
            for (int j = 0; j<N; ++j){
                A[i][j] = rand()%200 - 100; // Генерируем значение от -100 до 99 включительно
                cout<< setw(3) << A [i][j]<<' '; // Выводим сгенерированное значение
            }
            cout<<endl;
        }
    }

    int sum, max; // Переменные для хранения суммы строки и её максимального элемента
    flag = 0; // Нашли ли мы элемент <0 на главной диагонали
    for (int i = 0; i<N; ++i){
        for (int j = 0; j<N; ++j){
            if(i == j){ // Обращаемся к элементу на главной диагонали
                if (A[i][j]<0){ // Если он отрицательный
                    flag = 1; // Ставим пометку, что хотя бы один элемент <0 на главной диагонали есть
                    sum = 0; // Предварительно обнуляем сумму
                    max = A[i][0]; // За максимальный элемент предварительно берём первый элемент столбца
                    for (int k = 0; k<N; ++k){ // Идём по строке
                        sum += A[i][k]; // Суммируем элементы
                        if(A[i][k]>max){ // Проверяем, больше ли новый элемент текущего максимума
                            max = A[i][k]; // Если да, то перезаписываем
                        }
                    }
                    cout<<"\nСумма " << i+1 <<"-строки = " << sum<<endl;
                    cout << "Максимальный элемент = "<<max<<endl;
                }
            }
        }
    }
    // Если отрицательных эл-тов на главной диагонали нет (флаг == 0), выводим надпись
    if (!flag) cout <<"\nОтрицательных элементов на главной диагонали нет.\n";

    return 0;
}
